name: golang
dependencies:
  - stage: base
  - stage: '{{ if eq .ARCH "aarch64" }}golang-alpine{{ else }}golang-bootstrap{{ end }}'
steps:
  - sources:
      - url: https://dl.google.com/go/go1.18.2.src.tar.gz
        destination: go.src.tar.gz
        sha256: 2c44d03ea2c34092137ab919ba602f2c261a038d08eb468528a3f3a28e5667e2
        sha512: 9214cbc051cf26b49ab1bd4d8d30b060865944b831578a9ea7fcfe33f84009f77932a39f2948efbfc412b151e4734a3bc1f8332f3bea11b35a912b0e23a4118f

    env:
      GOROOT_BOOTSTRAP: '{{ .TOOLCHAIN }}/go_bootstrap'
      GOROOT_FINAL: '{{ .TOOLCHAIN }}/go'
      CGO_ENABLED: '0'

    prepare:
      - tar -xzf go.src.tar.gz --strip-components=1

    build:
      - cd src && sh make.bash
    install:
      - rm -rf pkg/obj
      - rm -rf pkg/bootstrap
      - rm -f pkg/tool/*/api
      - |
        find src \( -type f -a -name "*_test.go" \) \
        -exec rm -rf \{\} \+
      - |
        find src \( -type d -a -name "testdata" \) \
        -exec rm -rf \{\} \+
      - |
        find src -type f -a \( -name "*.bash" -o -name "*.rc" -o -name "*.bat" \) \
        -exec rm -rf \{\} \+

      - mkdir -p "/rootfs${GOROOT_FINAL}"
      - mv * "/rootfs${GOROOT_FINAL}"
finalize:
  - from: /rootfs
    to: /
